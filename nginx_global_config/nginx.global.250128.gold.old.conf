# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log debug;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.

# include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # SSL Global Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout  10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    # include /etc/nginx/conf.d/*.conf;

    # server {
    #    listen       80;
    #    listen       [::]:80;
    #    server_name  _;
    #    root         /usr/share/nginx/html;

    #    # Load configuration files for the default server block.
    #    include /etc/nginx/default.d/*.conf;


    #    error_page 404 /404.html;
    #    location = /404.html {
    #    }

    #    error_page 500 502 503 504 /50x.html;
    #    location = /50x.html {
    #    }
    # }
	
	# 默认服务器块 - 处理未知域名的请求
	server {
		listen 80 default_server;
		listen [::]:80 default_server;
		server_name _;
		
		# 健康检查端点
		location /health-check {
			access_log off;
			return 200 'ok';
		}
		
		# 其他未知请求返回444
		location / {
			return 444;
		}
	}

    # play_lobby 服务器配置
	server {
		# listen 80;
        listen 443 ssl;  # 移除 http2
        http2 on;        # 单独启用 HTTP/2
		server_name play.saga4v.com;
    
		access_log /var/log/nginx/play.access.log;
		error_log /var/log/nginx/play.error.log debug;

		# SSL 配置
		ssl_certificate /etc/nginx/ssl/play.saga4v.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/play.saga4v.com/privkey.pem;
		ssl_ciphers HIGH:!aNULL:!MD5;

		# HTTP 重定向到 HTTPS
		if ($scheme != "https") {
			return 301 https://$host$request_uri;
		}
        
        location / {
			# 移除上游服务器验证
			proxy_pass http://luna-game-frontend:5173;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			
			# 添加错误处理
			proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
			proxy_next_upstream_tries 3;
			proxy_connect_timeout 60s;
			
			# 添加调试头
			add_header X-Debug-Message "Proxying to local port 5173" always;
			add_header X-Proxy-Status "Active" always;
		}
        
        # 添加健康检查端点
        location /health-check {
            access_log off;
            return 200 'ok';
        }
	}
	
	# love 服务器配置
	server {
		# listen 80;
		listen 443 ssl;  # 移除 http2
        http2 on;        # 单独启用 HTTP/2
        server_name love.saga4v.com;

		# SSL 配置
        ssl_certificate /etc/nginx/ssl/love.saga4v.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/love.saga4v.com/privkey.pem;

		# ssl_ciphers HIGH:!aNULL:!MD5;

		# HTTP 重定向到 HTTPS
		if ($scheme != "https") {
			return 301 https://$host$request_uri;
		}

		location / {
			# proxy_pass http://frontend:4173;
			# proxy_pass http://127.0.0.1:4173;
            proxy_pass http://ai-chat-application-1113-main-frontend-1:4173;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # 添加调试头
			add_header X-Debug-Message "Proxying to 4173" always;
		}
	}
	
    # 统一的 HTTP 重定向
    server {
        listen 80;
        listen [::]:80;
        server_name love.saga4v.com play.saga4v.com payment.saga4v.com;
        
        # SSL 验证目录
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }
        
        # 所有其他请求重定向到 HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # 支付服务配置（保留这个作为唯一的支付服务入口）
    server {
        # listen 80;
        # server_name payment.saga4v.com;
        
        # 用于SSL验证的目录
        location /.well-known/acme-challenge/ {
            root /var/www/html;
        }

        # 将HTTP重定向到HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    server {
        listen 443 ssl;  # 移除 http2
        http2 on;        # 单独启用 HTTP/2
        server_name payment.saga4v.com;     

        # 证书配置
        ssl_certificate     /etc/nginx/ssl/payment.saga4v.com/fullchain.pem;      # 完整证书链
        ssl_certificate_key /etc/nginx/ssl/payment.saga4v.com/privkey.pem;        # 私钥文件
       
        # 统一 SSL 会话缓存配置
        ssl_session_cache shared:SSL:10m;    # 所有工作进程共享的10MB缓存，可以存储约40000个会话

        # 设置SSL会话超时时间
        ssl_session_timeout 10m;             # 客户端可以重用会话的时间为10分钟

        # 禁用SSL会话票证
        ssl_session_tickets off;             # 提高安全性，防止会话票证被破解

        # 启用OCSP装订
        ssl_stapling on;                     # 启用OCSP装订，允许客户端检查证书的有效性

        # 验证OCSP响应
        ssl_stapling_verify on;              # 确保OCSP响应的真实性

        # SSL协议版本控制
        ssl_protocols TLSv1.2 TLSv1.3;       # 只允许TLS 1.2和1.3，禁用不安全的旧版本

        # 密码套件配置
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;    # 安全的现代密码套件

        # 服务器密码首选项
        ssl_prefer_server_ciphers off;       # 允许客户端选择密码套件，提高兼容性

        # HSTS配置（如果需要）
        # add_header Strict-Transport-Security "max-age=63072000" always;  # 启用HSTS，强制HTTPS

        # DH参数（如果使用）
        # ssl_dhparam /etc/nginx/ssl/dhparam.pem;                                 # 自定义DH参数

        # OCSP装订配置
        # ssl_stapling_file /etc/nginx/ssl/ocsp.resp;                            # OCSP响应文件
        # ssl_trusted_certificate /etc/nginx/ssl/chain.pem;                       # 信任的CA证书

        # 错误日志配置
        error_log /var/log/nginx/ssl-error.log debug;                            # SSL相关错误日志

        # CORS 配置
        location / {
            # CORS 头部设置
            add_header 'Access-Control-Allow-Origin' 'https://love.saga4v.com' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept, Origin, Authorization, Stripe-Version, Stripe-Signature' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            # 预检请求处理
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://love.saga4v.com' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Accept, Origin, Authorization' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            proxy_pass http://ai-chat-application-1113-main-payment-server-1:4242;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 支持
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            
            # 调试信息
            add_header X-Debug-Message "Payment Service Proxy" always;
        }
        
        # 详细的错误日志
        access_log /var/log/nginx/payment.access.log;
        error_log /var/log/nginx/payment.error.log debug;
    }

    # 添加详细的 SSL 日志
    # ssl_protocols TLSv1.2 TLSv1.3;
    ssl_verify_depth 2;
    ssl_verify_client off;
    
    # 增加 SSL 会话缓存大小
    ssl_session_cache shared:SSL:10m;
    # ssl_session_timeout 10m;
    
    error_log /var/log/nginx/payment-ssl-error.log debug;

	# kitty_game 服务器配置
	server {
		listen 80;
		server_name kitty.saga4v.com;
		
		access_log /var/log/nginx/kitty.access.log;
		error_log /var/log/nginx/kitty.error.log debug;

		location / {
			proxy_pass http://127.0.0.1:42891;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			
			# 添加调试头
			add_header X-Debug-Message "Proxying to 42891" always;
		}
	}

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl;
#        listen       [::]:443 ssl;
#        http2        on;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#        location = /404.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#        location = /50x.html {
#        }
#    }
}
